// sample03 - IRsendDemo

#include <ESP8266WiFi.h>
#include <IRsend.h>

#define IR_LED 4  // ESP8266 GPIO pin to use. Recommended: 4 (D2).
IRsend irsend(IR_LED);  // Set the GPIO to be used to sending the message.

// 抵抗計算
// OSI5FU5111C-40    VF=1.35V, IF=100mA
// http://akizukidenshi.com/download/OSI5FU5111C-40.pdf
// (3.3V - 1.35V) / 0.100 A = 19.5 Ω
// でも光らない、、、以下見つけた
// http://canadie.hatenablog.com/entry/2015/09/05/125025

void setup() {
  irsend.begin();
  Serial.begin(115200, SERIAL_8N1, SERIAL_TX_ONLY);
}

void loop() {
  fan_on();
  fan_off();
}

void fan_on() {
  Serial.println("fan_on()");
  // ファンを「ソフト + 1/fゆらぎon + 切タイマー3時間on」で駆動
  uint16_t soft_rawData[131] = {3476, 1724,  452, 418,  452, 1288,  454, 418,  452, 418,  452, 418,  452, 418,  452, 418,  452, 418,  452, 418,  452, 418,  454, 416,  452, 418,  452, 418,  452, 1288,  454, 416,  454, 418,  452, 418,  452, 418,  452, 418,  452, 418,  452, 1288,  454, 418,  452, 1288,  454, 1286,  454, 418,  452, 416,  454, 1288,  454, 418,  452, 418,  452, 418,  452, 418,  452, 1288,  454, 418,  452, 418,  452, 418,  452, 416,  454, 1288,  454, 1288,  454, 418,  452, 418,  452, 1286,  454, 416,  454, 416,  454, 416,  454, 418,  452, 1286,  454, 418,  452, 416,  454, 1286,  454, 416,  454, 416,  454, 1288,  454, 418,  452, 416,  454, 416,  454, 416,  454, 418,  452, 416,  454, 1288,  454, 1288,  454, 416,  454, 416,  454, 1286,  454, 418,  452};  // UNKNOWN 481E6C3E
  uint16_t yuragi_rawData[131] = {3500, 1698,  480, 390,  480, 1260,  480, 392,  476, 392,  478, 392,  478, 394,  478, 390,  480, 390,  478, 392,  478, 390,  480, 390,  478, 390,  480, 390,  480, 1260,  478, 394,  480, 390,  478, 392,  478, 392,  478, 392,  478, 392,  480, 1262,  480, 392,  476, 1262,  480, 1260,  478, 394,  478, 390,  480, 1262,  480, 390,  480, 390,  478, 392,  480, 390,  478, 1260,  482, 392,  476, 394,  478, 390,  478, 392,  478, 1262,  478, 1262,  480, 392,  480, 392,  478, 392,  476, 1262,  478, 394,  476, 394,  478, 392,  476, 394,  476, 394,  478, 392,  478, 394,  478, 392,  476, 394,  478, 392,  478, 1262,  478, 1262,  476, 394,  476, 394,  474, 396,  478, 1262,  476, 1264,  476, 396,  476, 1264,  478, 392,  476, 1264,  478, 394,  422};  // UNKNOWN C84D16B8
  uint16_t timer_rawData[131] = {3474, 1724,  454, 418,  452, 1288,  452, 418,  452, 418,  452, 418,  452, 418,  452, 418,  454, 418,  452, 418,  452, 418,  452, 416,  452, 418,  454, 416,  452, 1288,  452, 418,  454, 418,  452, 418,  452, 418,  452, 418,  452, 418,  452, 1288,  454, 418,  452, 1288,  454, 1288,  452, 418,  452, 418,  452, 1288,  454, 418,  452, 416,  452, 418,  452, 418,  452, 1288,  454, 418,  452, 418,  452, 418,  452, 418,  452, 1288,  454, 1288,  454, 418,  452, 418,  452, 1288,  454, 1288,  454, 418,  452, 416,  452, 418,  452, 418,  452, 1288,  454, 418,  452, 418,  452, 418,  452, 418,  452, 418,  454, 1286,  454, 1288,  452, 418,  452, 416,  454, 1288,  452, 1288,  454, 1288,  452, 416,  454, 1288,  454, 418,  452, 418,  452, 418,  452};  // UNKNOWN DDD278E8

  Serial.println("a rawData capture from IRrecvDumpV2");
  irsend.sendRaw(soft_rawData, 131, 38);  // Send a raw data capture at 38kHz.
  delay(1000);
  irsend.sendRaw(yuragi_rawData, 131, 38);  // Send a raw data capture at 38kHz.
  delay(1000);
  irsend.sendRaw(timer_rawData, 131, 38);  // Send a raw data capture at 38kHz.
  delay(1000);
}

void fan_off() {
  Serial.println("fan_off()");
  // ファンを「切」で駆動
  uint16_t kiru_rawData[131] = {3476, 1722,  454, 416,  454, 1286,  454, 418,  452, 416,  454, 416,  454, 416,  454, 416,  454, 416,  454, 416,  454, 416,  454, 416,  454, 416,  454, 416,  454, 1286,  454, 416,  454, 418,  452, 416,  454, 416,  454, 416,  454, 416,  454, 1288,  454, 416,  454, 1286,  454, 1288,  454, 416,  454, 416,  454, 1286,  454, 418,  452, 416,  454, 416,  454, 416,  454, 1288,  454, 416,  454, 418,  452, 416,  454, 416,  454, 1288,  454, 1286,  454, 416,  454, 416,  454, 1286,  454, 1286,  456, 416,  454, 418,  452, 1286,  454, 1286,  454, 416,  454, 416,  454, 416,  454, 416,  454, 416,  454, 418,  452, 1286,  454, 1286,  454, 416,  454, 416,  454, 1286,  454, 1286,  456, 1286,  454, 416,  454, 416,  454, 1286,  454, 1286,  454, 416,  454};  // UNKNOWN 258105EC

  Serial.println("a rawData capture from IRrecvDumpV2");
  irsend.sendRaw(kiru_rawData, 131, 38);  // Send a raw data capture at 38kHz.
  delay(1000);
}

